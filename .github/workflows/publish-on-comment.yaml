name: publish-on-comment

on:
  issue_comment:
    types: [created]

jobs:
  check-comment:
    name: Check comment for /publish
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request }}
    outputs:
      trigger-comment: ${{ steps.check.outputs.triggered }}
    steps:
      - uses: khan/pull-request-comment-trigger@v1.1.0
        id: check
        with:
          trigger: "/publish"
          prefix_only: "true"
          reaction: "rocket"

  get-affected-plugins:
    name: Get affected plugins
    needs: check-comment
    if: ${{ needs.check-comment.outputs.trigger-comment == 'true' }}
    uses: ./.github/workflows/nx.template.yaml
    with:
      nx-head: ${{ github.head_ref || inputs.nx-head || github.event.pull_request.head.ref }}
      nx-base: ${{ github.base_ref || inputs.nx-base || github.event.repository.default_branch }}

  get-last-commit:
    name: Get last commit short SHA of the PR
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request }}
    outputs:
      last-commit-short-sha: ${{ steps.last_commit.outputs.sha }}
    steps:
      - name: Get last commit SHA of the PR
        id: last-commit
        uses: actions/github-script@v5
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            return pr.data.head.sha | cut -c1-7;

  publish:
    name: Publish beta version
    runs-on: ubuntu-latest
    needs: [get-affected-plugins, get-last-commit]
    if: ${{ needs.get-affected-plugins.outputs.affected-plugins != '[]' && needs.get-affected-plugins.outputs.affected-plugins != '' }}
    strategy:
      matrix:
        affected-plugin: ${{ fromJson(needs.get-affected-plugins.outputs.affected-plugins) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies and build ðŸ”§
        run: npm ci && npm run build
        working-directory: plugins/${{ matrix.affected-plugin }}

      - name: Publish version dry-run
        run: npm publish --access public --tag beta --dry-run
        working-directory: plugins/${{ matrix.affected-plugin }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish package on NPM [beta] ðŸ“¦
        run: |
          VERSION=$(cat package.json | jq -r '.version')
          npm version $VERSION-beta.pr-${{ github.event.issue.number }}.${{ needs.get-last-commit.outputs.last-commit-short-sha }}
          npm publish --access public --tag beta
        working-directory: plugins/${{ matrix.affected-plugin }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-comment:
    name: Create comment
    runs-on: ubuntu-latest
    needs: [get-affected-plugins, publish]
    if: ${{ needs.get-affected-plugins.outputs.affected-plugins != '[]' && needs.get-affected-plugins.outputs.affected-plugins != '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Published beta version for ${{ needs.get-affected-plugins.outputs.affected-plugins }}
